// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Notes.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Xemio.Shared.Models.Notes {

  /// <summary>Holder for reflection information generated from Notes.proto</summary>
  public static partial class NotesReflection {

    #region Descriptor
    /// <summary>File descriptor for Notes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NotesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtOb3Rlcy5wcm90bxIFWGVtaW8iWwoJRm9sZGVyRFRPEgoKAmlkGAEgASgJ",
            "EgwKBG5hbWUYAiABKAkSFgoOcGFyZW50Rm9sZGVySWQYAyABKAkSDgoGdXNl",
            "cklkGAQgASgJEgwKBGV0YWcYBSABKAxCHKoCGVhlbWlvLlNoYXJlZC5Nb2Rl",
            "bHMuTm90ZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Xemio.Shared.Models.Notes.FolderDTO), global::Xemio.Shared.Models.Notes.FolderDTO.Parser, new[]{ "Id", "Name", "ParentFolderId", "UserId", "Etag" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FolderDTO : pb::IMessage<FolderDTO> {
    private static readonly pb::MessageParser<FolderDTO> _parser = new pb::MessageParser<FolderDTO>(() => new FolderDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FolderDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Xemio.Shared.Models.Notes.NotesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolderDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolderDTO(FolderDTO other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      parentFolderId_ = other.parentFolderId_;
      userId_ = other.userId_;
      etag_ = other.etag_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolderDTO Clone() {
      return new FolderDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parentFolderId" field.</summary>
    public const int ParentFolderIdFieldNumber = 3;
    private string parentFolderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentFolderId {
      get { return parentFolderId_; }
      set {
        parentFolderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 4;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 5;
    private pb::ByteString etag_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FolderDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FolderDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ParentFolderId != other.ParentFolderId) return false;
      if (UserId != other.UserId) return false;
      if (Etag != other.Etag) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ParentFolderId.Length != 0) hash ^= ParentFolderId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ParentFolderId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ParentFolderId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Etag);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ParentFolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentFolderId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Etag);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FolderDTO other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ParentFolderId.Length != 0) {
        ParentFolderId = other.ParentFolderId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            ParentFolderId = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 42: {
            Etag = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
